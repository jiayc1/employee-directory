{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","useEffect","a","fetch","response","json","results","className","Typography","variant","title","columns","name","label","options","filter","sort","enableNestedDataAccess","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAoEeA,EA/DH,WACV,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KAEAC,oBAAS,sBAAC,8BAAAC,EAAA,sEACeC,MAAM,wCADrB,cACFC,EADE,gBAEWA,EAASC,OAFpB,OAEFA,EAFE,OAIRL,EAAQK,EAAKC,SAJL,2CAKR,IA0CF,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAAC,IAAD,CACIC,MAAO,gBACPX,KAAMA,GAAc,GACpBY,QA9CQ,CACd,CACCC,KAAM,aACNC,MAAO,aACPC,QAAS,CACRC,QAAQ,EACRC,MAAM,IAGR,CACEJ,KAAM,SACNC,MAAO,SACPC,QAAS,CACRC,QAAQ,EACRC,MAAM,IAGR,CACCJ,KAAM,QACNC,MAAO,QACPC,QAAS,CACRC,QAAQ,EACRC,MAAM,IAGR,CACCJ,KAAM,UACNC,MAAO,MACPC,QAAS,CACRC,QAAQ,EACRC,MAAM,KAiBHF,QAZQ,CACdG,uBAAwB,WCvCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1546395c.chunk.js","sourcesContent":["import './App.css';\nimport MUIDataTable from \"mui-datatables\";\nimport { useState, useEffect } from \"react\";\nimport { Typography } from '@material-ui/core';\n\nconst App = () => {\n  const [data, setData] = useState()\n\n  useEffect(async () => {\n    const response = await fetch('https://randomuser.me/api/?results=5')\n    const json = await response.json()\n\n    setData(json.results)\n  },[])\n  \n  const columns = [\n    {\n     name: \"name.first\",\n     label: \"First Name\",\n     options: {\n      filter: true,\n      sort: true\n     }\n    },\n    {\n      name: \"gender\",\n      label: \"Gender\",\n      options: {\n       filter: true,\n       sort: true\n      }\n     },\n     {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n       filter: true,\n       sort: true\n      }\n     },\n     {\n      name: \"dob.age\",\n      label: \"Age\",\n      options: {\n       filter: true,\n       sort: true\n      }\n     },\n   ];\n\n  const options = {\n    enableNestedDataAccess: \".\"\n  };\n\n\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h3\">Employee Directory</Typography>\n      <MUIDataTable\n          title={\"Employee List\"}\n          data={data ? data : []}\n          columns={columns}\n          options={options}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}